[{"C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\index.js":"1","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\App.js":"2","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\Post.js":"3","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\firebase.js":"4","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\ImageUpload.js":"5","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\Comments.js":"6","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\ScrollToTop.js":"7"},{"size":220,"mtime":1610094954458,"results":"8","hashOfConfig":"9"},{"size":6643,"mtime":1610802793506,"results":"10","hashOfConfig":"9"},{"size":3072,"mtime":1610888855116,"results":"11","hashOfConfig":"9"},{"size":631,"mtime":1610740051854,"results":"12","hashOfConfig":"9"},{"size":2925,"mtime":1610888938560,"results":"13","hashOfConfig":"9"},{"size":198,"mtime":1610790028326,"results":"14","hashOfConfig":"9"},{"size":633,"mtime":1610793802574,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tgzkrq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\index.js",[],["35","36"],"C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\App.js",["37"],"import './App.css';\nimport Post from './Post'\nimport {useState, useEffect} from 'react';\nimport {db, auth, storage} from './firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload'\n\n// function getModalStyle() {\n//   const top = 50\n//   const left = 50\n\n//   return {\n//     top: `${top}%`,\n//     left: `${left}%`,\n//     transform: `translate(-${top}%, -${left}%)`,\n//   };\n// }\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [posts,setPosts] = useState([]);\n  const [open,setOpen] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [alertMessage, setAlert] = useState(\"\");\n  const [user,setUser] = useState(null)\n  const [openSignIn, setOpenSignIn] = useState(false);\n\n  useEffect(() =>{\n    const unsubscribe = auth.onAuthStateChanged(authUser =>{\n      if(authUser){\n        setUser(authUser)\n      }\n      else{\n        //user has logged out\n        setUser(null)\n      }\n    })\n\n    return () =>{\n      unsubscribe()\n    }\n  },[user, username])\n\n  useEffect(() => {\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot =>{\n       setPosts(snapshot.docs.map(doc => ({\n         id: doc.id,\n         post: doc.data()\n       })\n       ))\n    })\n  },[posts])\n\n  useEffect(()=>{\n    if(user){\n      setOpen(false)\n      setOpenSignIn(false)\n      setAlert(\"\")\n    }\n  },[user])\n\n  const signup = (event) =>{\n    event.preventDefault();\n    auth\n    .createUserWithEmailAndPassword(email, password)\n    .then(authUser => {\n      return (authUser.user.updateProfile({\n        displayName: username,\n      })\n      )\n    })\n    .catch((error)=> {\n      setAlert(error.message)\n    });\n  }\n\n  const signin = (event) =>{\n\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email,password)\n    .catch(error => {\n      setAlert(error.message);  \n    });\n  }\n\n  return (\n    <div className=\"app\">\n    <center>\n    <div>\n    <Modal\n        open={open}\n        onClose={() => setOpen(false)} \n      >\n        <div \n        className={classes.paper} \n        style={{\n          top: `${50}%`,\n          left: `${50}%`,\n          transform: `translate(-${50}%, -${50}%)`,\n        }}>\n        <form>\n          <center>\n            <img className=\"app__headerImage\" \n              src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n              alt = \"instagram\"/>\n              <p/>\n              <Input \n                placeholder=\"username\" \n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n                className=\"signup\"\n              /> \n              <p/>\n              <Input \n                placeholder=\"email\" \n                type=\"text\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                className=\"signup\"\n              /> \n              <p/>\n              <Input \n                placeholder=\"password\" \n                type=\"password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n                className=\"signup\"\n              /> \n              <p/>\n              <Button type=\"submit\" onClick={signup}>Sign Up</Button>\n              <p/>\n              <div className=\"signup__alert\"> {alertMessage} </div>\n            </center>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)} \n      >\n        <div \n        className={classes.paper} \n        style={{\n          top: `${50}%`,\n          left: `${50}%`,\n          transform: `translate(-${50}%, -${50}%)`,\n        }}>\n        <form>\n          <center>\n            <img className=\"app__headerImage\" \n              src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n              alt = \"instagram\"/>\n              <p/>\n              <Input \n                placeholder=\"email\" \n                type=\"text\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                className=\"signup\"\n              /> \n              <p/>\n              <Input \n                placeholder=\"password\" \n                type=\"password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n                className=\"signup\"\n              /> \n              <p/>\n              <Button type=\"submit\" onClick={signin}>Sign In</Button>\n              <p/>\n              <div className=\"signup__alert\"> {alertMessage} </div>\n            </center>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img className=\"app__headerImage\" \n        src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n        alt = \"instagram\"/>\n        {user ? \n        (\n          <div style={{\n            display:'flex'\n          }\n          }>\n          <h4 style={{\n            fontWeight: 'normal',\n            marginRight: '10px'\n          }}>Currently logged in as  <strong>{user.displayName}  </strong> </h4>\n          <Button onClick={() => {\n            auth.signOut()\n          }}>\n          Log out\n          </Button>\n          </div>\n        )\n      :\n       (<div className=\"app__loginContainer\">\n         <Button onClick={() => setOpen(true)}> Sign Up</Button>\n          <Button onClick={() => {setOpenSignIn(true)}}>Sign in</Button>\n       </div>\n       )\n      }\n      </div>  \n      <div className=\"app__posts\">\n      {\n        posts.map((cur_post) => {\n          return(\n            <Post \n            user={user}\n            key={cur_post.id}\n            PostId={cur_post.id} \n            username={cur_post.post.username} \n            caption={cur_post.post.caption} \n            imageUrl={cur_post.post.imageUrl}/>)\n        })\n      }\n      </div>\n    </div>\n      \n    <div>\n      {user?.displayName ? (\n        <ImageUpload username={user.displayName}/>\n      )\n      :\n      (\n        <h1>Login to upload</h1>\n      )}\n      </div>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\Post.js",["38"],"import React, {useEffect, useState} from 'react'\r\nimport './Post.css'\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport {db} from './firebase'\r\nimport firebase from 'firebase'\r\nimport Comments from './Comments'\r\nfunction Post({user, PostId, username, caption, imageUrl}) {\r\n    const [comment, setComment] = useState(\"\")\r\n    const [comments, setComments] = useState([])\r\n    const [activatePost, setActivatePost] = useState(false)\r\n\r\n    useEffect(() =>{\r\n        let unsubscribe;\r\n        if(PostId){\r\n            unsubscribe = db\r\n            .collection(\"posts\")\r\n            .doc(PostId)\r\n            .collection(\"comments\")\r\n            .orderBy('timestamp','desc')\r\n            .onSnapshot((snapshot) => {\r\n                setComments(snapshot.docs.map((doc) =>{\r\n                    return(doc.data())\r\n                }))\r\n            })\r\n        }\r\n        return () =>{\r\n            unsubscribe();\r\n        }\r\n    }\r\n    ,[PostId]); \r\n    const postComment = (e) =>{\r\n        e.preventDefault();\r\n        db.collection(\"posts\").doc(PostId).collection(\"comments\").add({\r\n            username: user.displayName,\r\n            text: comment,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setComment(\"\");\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if(user){\r\n\r\n            if(comment!=\"\"){\r\n                setActivatePost(true);\r\n            }\r\n            else setActivatePost(false);\r\n        }\r\n    },[comment,user])\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">  \r\n                <Avatar \r\n                className=\"post__avatar\"\r\n                src=\"/static/images/avatar/1.jpg\"\r\n                alt={username}\r\n                />\r\n                <h3 className=\"post__username\">{username}</h3>\r\n            </div>\r\n            \r\n\r\n            <img className=\"post__image\" src={imageUrl}\r\n            alt=\"tp\" />\r\n            <left>\r\n            <h4 className=\"post__text\"><strong>{username} </strong>{caption}</h4>\r\n            <div className=\"post__comments\">\r\n                {\r\n                    comments.map((cur)=>(\r\n                        <div>\r\n                        <p/>\r\n                            <Comments key={cur.id} username={cur.username} text={cur.text}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            </left>\r\n            <form className=\"post__commentBox\">\r\n                <input \r\n                    type=\"text\"\r\n                    value={comment}\r\n                    placeholder=\"Add a comment here\"\r\n                    className=\"post__input\"\r\n                    onChange={(e)=> setComment(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"post__button\"\r\n                    disabled={!activatePost}\r\n                    onClick={postComment}\r\n                    type=\"submit\"\r\n                >\r\n                    Post\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\firebase.js",[],"C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\ImageUpload.js",["39","40"],"import { Button } from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react'\r\nimport {storage, db } from \"./firebase\"\r\nimport firebase from 'firebase'\r\nimport './imageupload.css'\r\n\r\nfunction ImageUpload({username}) {\r\n    const [image,setImage] = useState(null);\r\n    const [caption,setCaption] = useState(\"\");\r\n    const [progress,setProgress] = useState(0);\r\n    \r\n    const handleChange = (e) =>{\r\n        if(e.target.files[e.target.files.length - 1]){\r\n            setImage(e.target.files[e.target.files.length - 1])\r\n        }\r\n    }\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n          top: 0,\r\n          behavior: \"smooth\"\r\n        });\r\n      };\r\n    const handleUpload = () =>{\r\n        var date = new Date();\r\n        var time = date.getTime().toString();\r\n        const uploadTask = storage.ref(`images/${time}`)\r\n        .put(image);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot)=>{\r\n                const progress1 = Math.round(\r\n                    (snapshot.bytesTransferred/snapshot.totalBytes) * 100\r\n                )\r\n                setProgress(progress1);\r\n            },\r\n            (error) =>{\r\n                console.log(error)\r\n                alert(error.message)\r\n            },\r\n            () =>{\r\n                storage\r\n                .ref(\"images\")\r\n                .child(`${time}`)\r\n                .getDownloadURL()\r\n                .then(url =>{\r\n                        db.collection(\"posts\").add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption : caption,\r\n                        imageUrl: url,\r\n                        username: username\r\n                    })\r\n                })\r\n                setProgress(0);\r\n                setImage(null)\r\n                setCaption(\"\")\r\n            }\r\n        )\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\",\r\n        \r\n          });\r\n    }\r\n\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress value={progress} max=\"100\" className=\"imageupload__progress\"/>\r\n             <input \r\n                 type=\"text\" \r\n                 placeholder=\"Enter caption here\" \r\n                 onChange={(e) => setCaption(e.target.value)}\r\n                 value={caption} \r\n                 style={{padding:'20px'}}\r\n             />\r\n             <input \r\n                 type=\"file\"\r\n                 onChange={handleChange}\r\n             />\r\n             {\r\n                 image ?\r\n                 (\r\n                    <Button onClick={handleUpload}>\r\n                        Upload\r\n                    </Button>\r\n                 )\r\n                 :\r\n                 (\r\n                    <h3>Select an image you want to upload</h3>\r\n                 )\r\n             }\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\Comments.js",[],["41","42"],"C:\\Users\\Parikhs\\Desktop\\instagram-clone\\src\\ScrollToTop.js",["43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":19,"nodeType":"52","messageId":"53","endLine":4,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":44,"column":23,"nodeType":"56","messageId":"57","endLine":44,"endColumn":25},{"ruleId":"50","severity":1,"message":"58","line":2,"column":26,"nodeType":"52","messageId":"53","endLine":2,"endColumn":35},{"ruleId":"50","severity":1,"message":"59","line":17,"column":11,"nodeType":"52","messageId":"53","endLine":17,"endColumn":22},{"ruleId":"46","replacedBy":"60"},{"ruleId":"48","replacedBy":"61"},{"ruleId":"50","severity":1,"message":"62","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":13},{"ruleId":"50","severity":1,"message":"63","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":19},{"ruleId":"50","severity":1,"message":"59","line":17,"column":9,"nodeType":"52","messageId":"53","endLine":17,"endColumn":20},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'scrollToTop' is assigned a value but never used.",["64"],["65"],"'React' is defined but never used.","'isVisible' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]